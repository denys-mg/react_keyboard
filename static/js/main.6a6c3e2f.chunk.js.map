{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","undefined","handleKeyUp","event","currKey","key","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAQaA,EAAb,4MACEC,MAAe,CACbC,gBAAYC,GAFhB,EAaEC,YAAc,SAACC,GACb,IAAMC,EAAUD,EAAME,IAElBD,IAAY,EAAKL,MAAMC,YACzB,EAAKM,SAAS,CACZN,WAAYI,KAlBpB,uDAKE,WACEG,SAASC,iBAAiB,QAASC,KAAKP,eAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,eAV/C,oBAuBE,WACE,IAAQF,EAAeS,KAAKV,MAApBC,WAER,OACE,qBAAKW,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGX,EAAU,mCACqBA,EADrB,KAEP,kCA/Bd,GAAyBY,IAAMC,W,MCH/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.6a6c3e2f.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {};\n\ntype State = {\n  pressedKey?: string,\n};\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    pressedKey: undefined,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    const currKey = event.key;\n\n    if (currKey !== this.state.pressedKey) {\n      this.setState({\n        pressedKey: currKey,\n      });\n    }\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}